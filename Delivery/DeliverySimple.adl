CONTEXT DeliverySimple

INTERFACE Overview : I[ONE]
BOX[ "Alle klanten" : V[ONE*KlantNr]
     BOX [ naam : klantNaam ]
   , "Alle leveranciers" : V[ONE*LeverancierNr] 
     BOX [ naam : leverancierNaam ]
   , "Alle producten" : V[ONE*ProductNr]
     BOX [ naam : productNaam ]
   , "Alle bestellingen" : V[ONE*Bestelling] 
     BOX [ ProductNr : bestellingVan BOX [ naam : productNaam ] 
         , KlantNr : bestellingDoor BOX [ naam : klantNaam ] 
         , LeverancierNr : bestellingBij BOX [ naam : leverancierNaam ] 
     ]
   , "Zoeken" : V[ONE*Zoek]
   ]
     
INTERFACE KlantNr : I[KlantNr]
BOX [ Naam : klantNaam
    , Straat : klantAdres
    , Woonplaats : klantWoonplaats
    ]

INTERFACE LeverancierNr : I[LeverancierNr]
BOX [ Naam : leverancierNaam
    , Producten : levert
     BOX [ naam : productNaam ]
    , "Geaccepteerde bestellingen" : bestellingGeaccepteerd~
    , "Te accepteren bestellingen" : -bestellingGeaccepteerd~
    ]

INTERFACE ProductNr : I[ProductNr]
BOX [ Naam : productNaam
    , Prijs : productPrijs
    , Leveranciers : levert~
     BOX [ naam : leverancierNaam ]
    ]

INTERFACE Bestelling : I[Bestelling]
BOX [ KlantNr : bestellingDoor
      BOX [ Naam : klantNaam
          , Adres : klantAdres
          , Woonplaats : klantWoonplaats
          ]
   , LeverancierNr : bestellingBij
     BOX [ naam : leverancierNaam ]
   , product: bestellingVan
     BOX [ Naam : productNaam
         , Prijs : productPrijs
         ]
--   , bug1 :  -bestellingGeaccepteerd ; (-(bestellingGeaccepteerd~))  -- Deze twee 
--   , bug2 : (-bestellingGeaccepteerd); (-(bestellingGeaccepteerd~))  -- zijn niet gelijk
--   , bug3 : bestellingGeaccepteerd; bestellingGeaccepteerd~
   ]


-- Zoeken

-- Met behulp van een singleton concept Zoek en een hulprelatie kunnen
-- we een eenvoudige zoekfaciliteit simuleren.

-- Om te zoeken: druk op Edit in de gewenste zoek interface (bv. "Zoek op naam"), 
-- voeg de zoekterm toe met Insert New, vul de term in en druk op Save.
-- NB. Na het zoeken moet de zoekterm weer verwijderd worden. 

zoek :: Zoek * Zoek
 = [ ("zoek", "zoek")
   ]

zoekOpNr :: Zoek * KlantNr

INTERFACE "Zoek klant op nr" : I[Zoek]
BOX [ "Klantnr" : zoekOpNr 
      BOX [ Naam : klantNaam
          , Adres : klantAdres
          , Woonplaats : klantWoonplaats
          ]
    ]

zoekOpNaam :: Zoek * Naam

INTERFACE "Zoek op naam" : I[Zoek]
BOX [ "Gezochte Naam" : zoekOpNaam 
    , "Gevonden klanten" : zoekOpNaam ; klantNaam~
      BOX [ Naam : klantNaam
          , Adres : klantAdres
          , Woonplaats : klantWoonplaats
          ]
    , "Gevonden leveranciers" : zoekOpNaam ; leverancierNaam~
      BOX [ Naam : leverancierNaam
          , Producten : levert
            BOX [ naam : productNaam ]
          ]
    , "Gevonden producten" : zoekOpNaam ; productNaam~
      BOX [ Naam : productNaam
          , Prijs : productPrijs
          , Leveranciers : levert~
            BOX [ naam : leverancierNaam ]
         ]
    ]
  
  

-- Relaties en populaties

klantNaam :: KlantNr -> Naam 
  = [ ("Klant_1"      , "Martijn")
    ; ("Klant_2"      , "Stef")
    ]

klantAdres :: KlantNr -> Adres 
  = [ ("Klant_1"      , "Kerkstraat")
    ; ("Klant_2"      , "Dorpsstraat")
    ]
    
klantWoonplaats :: KlantNr -> Woonplaats 
  = [ ("Klant_1"      , "Utrecht")
    ; ("Klant_2"      , "Enschede")
    ]
    
leverancierNaam :: LeverancierNr -> Naam 
  = [ ("Leverancier_1", "Rubber inc.")
    ; ("Leverancier_2", "Mario's pizzas")
    ]
    
levert :: LeverancierNr * ProductNr 
  = [ ("Leverancier_1", "Product_1")
    ; ("Leverancier_1", "Product_2")
    ; ("Leverancier_1", "Product_3")
    ; ("Leverancier_2", "Product_4")
    ; ("Leverancier_2", "Product_5")
    ; ("Leverancier_2", "Product_3")
    ]

productNaam :: ProductNr -> Naam
  = [ ("Product_1", "Stuiterbal")
    ; ("Product_2", "Elastiekje")
    ; ("Product_3", "Rubberen kip")
    ; ("Product_4", "Pizza Margherita")
    ; ("Product_5", "Broodje Mario")
    ]

productPrijs :: ProductNr -> Prijs
  = [ ("Product_1", "0,50 euro")
    ; ("Product_2", "0,02 euro")
    ; ("Product_3", "6,95 euro")
    ; ("Product_4", "8,50 euro")
    ; ("Product_5", "4,50 euro")
    ]

bestellingDoor :: Bestelling -> KlantNr   
  = [ ("Bestelling_1", "Klant_1") ]
bestellingBij :: Bestelling -> LeverancierNr   
  = [ ("Bestelling_1", "Leverancier_1") ]
bestellingVan :: Bestelling -> ProductNr
  = [ ("Bestelling_1", "Product_1") ]

PROCESS Bestellen

bestellingGeaccepteerd :: Bestelling * LeverancierNr [UNI] -- een bestelling kan nooit door meerdere leveranciers geaccepteerd zijn
--  = [ ("Bestelling_1", "Leverancier_1") ]

ROLE LeverancierNr MAINTAINS "Alle bestellingen zijn geaccepteerd"
RULE "Alle bestellingen zijn geaccepteerd": I |- bestellingGeaccepteerd; bestellingGeaccepteerd~ -- == TOT

bestellingBezorgd :: Bestelling * KlantNr [UNI] -- een bestelling kan nooit door meerdere klanten ontvangen zijn

ROLE Klant MAINTAINS "Alle geaccepteerde bestellingen zijn bezorgd"
RULE "Alle geaccepteerde bestellingen zijn bezorgd": I |- ( (-bestellingGeaccepteerd);(-bestellingGeaccepteerd)~
                                                          \/ (bestellingBezorgd; bestellingBezorgd~))
-- regel is niet uit te drukken vanwege bug
-- de vele haakjes zijn vawege andere bug

--ROLE Klant MAINTAINS bug1, bug2
--RULE bug1:  (-bestellingGeaccepteerd) -- geeft violation zelfs als er geen acceptaties zijn

--RULE bug2:  (-bestellingGeaccepteerd);(-bestellingGeaccepteerd)~ -- geeft violation zelfs als er geen acceptaties zijn

--RULE bug3 :  -bestellingGeaccepteerd ; (-(bestellingGeaccepteerd~))  -- werkt niet in interface
--RULE bug4 : (-bestellingGeaccepteerd); (-(bestellingGeaccepteerd~))  -- werkt wel in interface. Verschil is een Brk in linker operand van ;

ENDPROCESS


ENDCONTEXT