CONTEXT EURentComputations
-----------------------------------------------------------
PROCESS "Computations"

--[Compute total rental charge]--
arg1 :: CompRentalCharge -> Amount
arg2 :: CompRentalCharge -> Amount
arg3 :: CompRentalCharge -> Amount
compRentalCharge :: CompRentalCharge * Amount [UNI]
RULE "Uniqueness of rental charge computations": arg1;arg1~ /\ arg2;arg2~ /\ arg3;arg3~ |- I[CompRentalCharge]

-- Create a computation when there is a need for it
ROLE ExecEngine MAINTAINS "Request rental charge"
RULE "Request rental charge": 
   I /\ rentalBasicCharge;rentalBasicCharge~
     /\ rentalPenaltyCharge;rentalPenaltyCharge~
     /\ rentalLocationPenaltyCharge;rentalLocationPenaltyCharge~ 
|- (    rentalBasicCharge;arg1~ 
     /\ rentalPenaltyCharge;arg2~
     /\ rentalLocationPenaltyCharge;arg3~
   );V
VIOLATION (TXT "{EX} NewStruct;CompRentalCharge" -- atom generated automatically (with time stamp)
               ,TXT ";arg1;CompRentalCharge;NULL;Amount;", SRC rentalBasicCharge
               ,TXT ";arg2;CompRentalCharge;NULL;Amount;", SRC rentalPenaltyCharge
               ,TXT ";arg3;CompRentalCharge;NULL;Amount;", SRC rentalLocationPenaltyCharge
           )

-- Compute the result whenever a computation exists
ROLE ExecEngine MAINTAINS "Compute rental charge"
RULE "Compute rental charge": I[CompRentalCharge] |- compRentalCharge;compRentalCharge~
VIOLATION (TXT "{EX} CompRentalCharge"
               , TXT ";compRentalCharge;CompRentalCharge;", SRC I, TXT ";Amount"
               , TXT ";", SRC arg1
               , TXT ";", SRC arg2
               , TXT ";", SRC arg3
          )

--[Compute number of days (period)]--
brg1 :: CompNrDays -> Date
brg2 :: CompNrDays -> Date
compNrDays :: CompNrDays * Integer [UNI]
RULE "Uniqueness of period computations": brg1;brg1~ /\ brg2;brg2~ |- I[CompNrDays]

-- Create a computation when there is a need for it
ROLE ExecEngine MAINTAINS "Rental period computation"
RULE "Rental period computation": 
   I /\ rcActualEndDate;rcActualEndDate~ /\ rcActualStartDate;rcActualStartDate~
|- (rcActualEndDate;brg1~ /\ rcActualStartDate;brg2~);V
VIOLATION (TXT "{EX} NewStruct;CompNrDays" -- atom generated automatically (with time stamp)
               ,TXT ";brg1;CompNrDays;NULL;Date;", SRC rcActualEndDate
               ,TXT ";brg2;CompNrDays;NULL;Date;", SRC rcActualStartDate
           )

-- Compute the result whenever a computation exists
ROLE ExecEngine MAINTAINS "Compute NrDays (period)"
RULE "Compute NrDays (period)": I[CompNrDays] |- compNrDays;compNrDays~
VIOLATION (TXT "{EX} CompNrDays"
               , TXT ";compNrDays;CompNrDays;", SRC I, TXT ";Integer"
               , TXT ";", SRC brg1
               , TXT ";", SRC brg2
          )

--[Compute rental basic charge]--
crg1 :: CompRentalBasicChcrge -> Integer
crg2 :: CompRentalBasicChcrge -> Amount
compRentalBasicCharge :: CompRentalBasicChcrge * Amount [UNI]
RULE "Uniqueness of rental chcrge computations": crg1;crg1~ /\ crg2;crg2~ |- I[CompRentalBasicChcrge]

-- Create a computation when there is a need for it
ROLE ExecEngine MAINTAINS "Request rental basic chcrge"
RULE "Request rental basic chcrge": I /\ rentalPeriod;rentalPeriod~ /\ rcIssuedCar;rcIssuedCar~
|- (rentalPeriod;crg1~ /\ rcIssuedCar;carType;rentalTariffPerDay;crg2~);V
VIOLATION (TXT "{EX} NewStruct;CompRentalBasicChcrge" -- atom generated automatically (with time stamp)
               ,TXT ";crg1;CompRentalBasicChcrge;NULL;Integer;", SRC rentalPeriod
               ,TXT ";crg2;CompRentalBasicChcrge;NULL;Amount;", SRC rcIssuedCar;carType;rentalTariffPerDay
           )

-- Compute the result whenever a computation exists
ROLE ExecEngine MAINTAINS "Compute rental basic chcrge"
RULE "Compute rental basic chcrge": I[CompRentalBasicChcrge] |- compRentalBasicCharge;compRentalBasicCharge~
VIOLATION (TXT "{EX} CompRentalBasicChcrge"
               , TXT ";compRentalBasicCharge;CompRentalBasicChcrge;", SRC I, TXT ";Amount"
               , TXT ";", SRC crg1
               , TXT ";", SRC crg2
          )

ENDPROCESS
-----------------------------------------------------------
ENDCONTEXT