CONTEXT EURentInterfaces
------------------------------------------------------------
INTERFACE "OVERVIEW" 
   ( sessionToday
   , sessionUser
   , sessionNewUserRC
   , sessionBranch
   , sessionNewBranchRC
   , sessionPickupPerson
   , sessionDroppedOffCar
   , sessionDroppedoffPerson 
-- Other stuff
   , maxRentalDuration
   , rentalTariffPerDay
   , excessTariffPerDay
   ) FOR Developer : I[ONE]
BOX[ "Session Context" : V[ONE*SESSION];'_SESSION'
   BOX[ "For users" : I
      BOX[ "User" : sessionUser
         , "New rental request" : sessionNewUserRC
         ]
      , "For branches" : I
      BOX[ "Branch" : sessionBranch
         , "New Branch Rental" : sessionNewBranchRC
         , "Pick-up (Person)" : sessionPickupPerson
         , "Drop-off (Car)" : sessionDroppedOffCar
         , "Drop-off (Person)" : sessionDroppedoffPerson
         ]
      , "Todays date" : sessionToday
      ]
   , "Rental cases" : V[ONE*RentalCase]
   , "Car rental company" : V[ONE*CarRentalCompany]
   BOX[ "Company name" : I
      , "Max. rental duration" : maxRentalDuration
      , "Branches" : branchOf~
      ]
   , "Car Types"    : V[ONE*CarType]
   BOX[ "Type" : I
      , "Cars" : carType~
      , "Daily tariff" : rentalTariffPerDay
      , "Excess tariff" : excessTariffPerDay
      ]
   , "People"       :V[ONE*Person]
   BOX[ "Name" : I
      , "Driving license nr" : validDrivingLicense
      ]
   ]

--[General Session Variables]-------------------------------
sessionToday  :: SESSION * Date [UNI]

PROCESS "Developer rules"
PURPOSE RULE "Dummy rule"
{+The current prototype generator tooling requires that every ROLE has a rule to maintain. Since we need the ROLE 'Developer' just for the general overview, we must create a dummy rule that is 'maintained' by the 'Developer' role. This rule can be removed when the prototype generator tooling no longer has this requirement.-}
ROLE Developer MAINTAINS "Dummy rule"
RULE "Dummy rule": I[SESSION] |- I[SESSION]
ENDPROCESS
------------------------------------------------------------
PROCESS "Session Initialization"
PURPOSE PROCESS "Session Initialization"
{+The interfaces provided by this system provide for user interaction with (parts of) the system. This section describes the automated functionality necessary to initialize the system to engate in such user interaction.-}

PURPOSE RULE "Initialize today's date"
{+Since some computations depend on today's date, we need to ensure such a value is available. However, since this system is only for prototyping purposes, we need a rule that ensures there is a (reasonable) value for today's date, but it is not enforced to be the actual date of today: this allows us to run prototype sessions and change this date if necessary.-}
ROLE ExecEngine MAINTAINS "Initialize today's date"
RULE "Initialize today's date": I[SESSION] |- sessionToday;sessionToday~
MEANING "Every session must have a value for 'today'"
VIOLATION (TXT "{EX} SetToday;sessionToday;SESSION;", SRC I, TXT ";Date;", TGT sessionToday)
ENDPROCESS
-----------------------------------------------------------
--[Rental Contract Overview]--
INTERFACE "Rental Overview" : I[RentalCase]
BOX[ "Contract details" : I[RentalCase] INTERFACE "Show Contract Details"
   , "Customer details" : I[RentalCase] INTERFACE "Show Customer Details"
   , "Car"              : rcAssignedCar INTERFACE "Show Car Details"
   , "Projected costs"  : I[RentalCase] INTERFACE "Show Projected Costs"
   , "Drop-off details" : I[RentalCase] INTERFACE "Show Drop-off Details"
   , "Billing details"  : I[RentalCase] INTERFACE "Show Billing Details"
   ]
-----------------------------------------------------------
--[Contract Views]--
INTERFACE "Show Contract Details" : I[RentalCase]
BOX[ "Pick-up branch" : contractedPickupBranch
   , "Drop-off branch" : contractedDropoffBranch
   , "Start date" : contractedStartDate
   , "End date" : contractedEndDate
   , "Car type" : contractedCarType
   , "Issued car" : rcAssignedCar
   ]

INTERFACE "Edit Contract Details"
   ( contractedPickupBranch
   , contractedDropoffBranch
   , contractedStartDate
   , contractedEndDate
   , contractedCarType
   ) : I[RentalCase]
BOX[ "* Pick-up branch" : contractedPickupBranch
   , "* Drop-off branch" : contractedDropoffBranch
   , "* Start date" : contractedStartDate
   , "* End date" : contractedEndDate
   , "* Car type" : contractedCarType
   , "Available car types at pick-up branch" : contractedPickupBranch;carAvailableAt~;carType
   ]
-----------------------------------------------------------
--[Customer Views]--
INTERFACE "Show Customer Details" : I[RentalCase]
BOX[ "Driver" : rcDriver
   , "VALID driving license" : rcDriver
   BOX[ "License number" : validDrivingLicense
      ]
   , "Renter" : rcRenter
   ]

INTERFACE "Edit Customer Details"
   ( rcDriver
   , validDrivingLicense
   , rcRenter
   ) : I[RentalCase]
BOX[ "* Driver" : rcDriver
   , "* VALID driving license" : rcDriver
   BOX[ "License number" : validDrivingLicense
      ]
   , "Renter (if different from driver)" : rcRenter
   ]
-----------------------------------------------------------
--[Car Views]--
INTERFACE "Show Car Details" : I[Car]
BOX[ "License plate" : I
   , "Type" : carType
   BOX[ "Type" : I
      , "Rental tariff (Euro/day)" : rentalTariffPerDay
      , "Excess tariff (Euro/day)" : excessTariffPerDay
      ]
   , "Available at (branch)" : carAvailableAt
   , "Current rental" : (I /\ -(carAvailableAt;carAvailableAt~));rcAssignedCar~
   , "All rentals" : rcAssignedCar~
   ]
-----------------------------------------------------------
--[Projected Cost View]--
INTERFACE "Show Projected Costs" : I[RentalCase]
BOX[ "Daily charge (Eur)" : contractedCarType;rentalTariffPerDay
   , "Period (days)"      : projectedRentalPeriod
   , "Rental charge (Eur)": projectedBasicCharge
   ]
-----------------------------------------------------------
PROCESS "Computing Projected Costs"
--? computing the period of the projected rental
projectedRentalPeriod :: RentalCase * Integer [UNI] -- Duration (in days) of rental period
ROLE ExecEngine MAINTAINS "Trigger projected rental period computation" -- Result = 1 + MAX(0, (Contracted end date - Contracted start date))
RULE "Trigger projected rental period computation": 
   I /\ contractedStartDate;contractedStartDate~ /\ contractedEndDate;contractedEndDate~
|- (contractedStartDate;earliestDate~ /\ contractedEndDate;latestDate~);V
VIOLATION (TXT "{EX} NewStruct;DateDifferencePlusOne" -- atom generated automatically (with time stamp)
               ,TXT ";earliestDate;DateDifferencePlusOne;NULL;Date;", SRC contractedStartDate
               ,TXT ";latestDate;DateDifferencePlusOne;NULL;Date;", SRC contractedEndDate
           )
ROLE ExecEngine MAINTAINS "projectedRentalPeriod computation"
RULE "projectedRentalPeriod computation": (contractedStartDate;earliestDate~ /\ contractedEndDate;latestDate~);computedRentalPeriod |- projectedRentalPeriod
VIOLATION (TXT "{EX} InsPair;projectedRentalPeriod;RentalCase;", SRC I, TXT ";Integer;", TGT I)

--? computing the charge of the projected rental
projectedBasicCharge :: RentalCase * Amount [UNI]
ROLE ExecEngine MAINTAINS "Trigger projected basic charge computation"
RULE "Trigger projected basic charge computation": I[RentalCase] /\ projectedRentalPeriod;projectedRentalPeriod~ /\ contractedCarType;contractedCarType~
|- (projectedRentalPeriod;ctcNrOfDays~ /\ contractedCarType;rentalTariffPerDay;ctcDailyAmount~);V
VIOLATION (TXT "{EX} NewStruct;CompTariffedCharge" -- atom generated automatically (with time stamp)
               ,TXT ";ctcNrOfDays;CompTariffedCharge;NULL;Integer;", SRC projectedRentalPeriod
               ,TXT ";ctcDailyAmount;CompTariffedCharge;NULL;Amount;", SRC contractedCarType;rentalTariffPerDay
           )
ROLE ExecEngine MAINTAINS "projectedBasicCharge computation"
RULE "projectedBasicCharge computation": (projectedRentalPeriod;ctcNrOfDays~ /\ contractedCarType;rentalTariffPerDay;ctcDailyAmount~);computedTariffedCharge |- projectedBasicCharge
VIOLATION (TXT "{EX} InsPair;projectedBasicCharge;RentalCase;", SRC I, TXT ";Amount;", TGT I)
ENDPROCESS
-----------------------------------------------------------
--[Drop-off Views]--
INTERFACE "Show Drop-off Details" : I[RentalCase]
BOX[ "Contract drop-off branch" : contractedDropoffBranch
   , "Contract drop-off end date" : contractedEndDate
   , "Dropped-off car" : rcDroppedOffCar
   , "Actual drop-off branch" : rcDroppedOffBranch
   , "Acutal drop-off date" : rcDroppedOffDate
   ]

INTERFACE "Edit Drop-off Details"
   ( contractedDropoffBranch
   , contractedEndDate
   , rcDroppedOffCar
   , rcDroppedOffBranch
   , rcDroppedOffDate
   ) : I[RentalCase]
BOX[ "Contract drop-off branch" : contractedDropoffBranch
   , "Contract drop-off end date" : contractedEndDate
   , "Dropped-off car" : rcDroppedOffCar
   , "Actual drop-off branch" : rcDroppedOffBranch
   , "Acutal drop-off date" : rcDroppedOffDate
   ]
-----------------------------------------------------------
--[Billing Views]--
INTERFACE "Show Billing Details" : I[RentalCase]
BOX[ "Part 1: Basic Charge" : I
   BOX[ "Number of days" : rentalPeriod
      , "Tariff per day" : rcAssignedCar;carType;rentalTariffPerDay
      , "Basic charge" : rentalBasicCharge
      ]
   , "Part 2: Penalty charge for exceeding contracted duration" : I
   BOX[ "Number of days" : rentalExcessPeriod
      , "Tariff per day" : rcAssignedCar;carType;excessTariffPerDay
      , "Penalty charge" : rentalPenaltyCharge
      ]
   , "Part 3: Penalty charge for uncontractual drop-off": I
   BOX[ "Contracted drop-off branch" : contractedDropoffBranch
      , "Actual drop-off branch" : rcDroppedOffBranch
      , "Distance (km)": (rcDroppedOffBranch;distbranch~ /\ contractedDropoffBranch;distbranch~);distance
--       , "Distance tariff" : yyy
      , "Penalty charge" : rentalLocationPenaltyCharge
      ]
  , "TOTAL charge" : rentalCharge
  ]
-----------------------------------------------------------
ENDCONTEXT