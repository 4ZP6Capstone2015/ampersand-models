CONTEXT EURentBRANCHInterfaces
-----------------------------------------------------------
sessionBranch :: SESSION * Branch [UNI]
sessionNewBranchRC :: SESSION * RentalCase [UNI]
sessionPickupPerson :: SESSION * Person [UNI]
sessionDroppedOffCar :: SESSION * Car [UNI]
sessionDroppedOffPerson :: SESSION * Person [UNI]

INTERFACE "EU-Rent Branch Office" 
   ( sessionToday
   , sessionBranch
   , sessionNewBranchRC
   , sessionPickupPerson
   , sessionDroppedOffCar
   , sessionDroppedOffPerson 
   ) FOR Branch : V[ONE*SESSION];'_SESSION'
BOX[ "Session context" : I[SESSION]
   BOX[ "Branch" : sessionBranch
      , "New Branch Rental" : sessionNewBranchRC
      , "Pick-up (Person)" : sessionPickupPerson
      , "Drop-off (Car)" : sessionDroppedOffCar
      , "Drop-off (Person)" : sessionDroppedOffPerson
      , "Todays date" : sessionToday
      ]
   , "Available cars" : sessionBranch;carAvailableAt~ BOX[ "License plate" : I, "Type" : carType ]
   , "Rentals to be picked up"   : (  sessionPickupPerson;(rcDriver \/ rcRenter)~
                                   /\ sessionBranch;contractedPickupBranch~
                                   )
                                   ;(I /\ rentalHasBeenPromised /\ -rentalHasBeenStarted)
   , "Rentals to be dropped off" : (I /\ sessionBranch;sessionBranch~)
                                   ;(  sessionDroppedOffCar;rcAssignedCar~
                                    \/ sessionDroppedOffPerson;(rcDriver \/ rcRenter)~
                                    )  
                                   ;(I /\ rentalHasBeenStarted /\ -rentalHasBeenEnded)
   , "Branch rental history" : sessionBranch;(contractedPickupBranch \/ contractedDropoffBranch \/ rcDroppedOffBranch)~;(I /\  rentalHasBeenEnded)
   ]

-----------------------------------------------------------
INTERFACE "New Branch Rental" 
   ( sessionToday
   , sessionBranch
   , sessionNewBranchRC
   , sessionPickupPerson
   , sessionDroppedOffCar
   , sessionDroppedOffPerson 
-- Edit Contract Details
-- , contractedStartDate
   , contractedEndDate
   , contractedCarType
-- , contractedPickupBranch
   , contractedDropoffBranch
-- Edit Customer Details
   , rcRenter
   , rcDriver
   , rcDrivingLicense
-- Car Assignment
   , contractedCarType
   , rcAssignedCar
   , rcKeysHandedOverQ
-- Other stuff
   , rcBranchRequestedQ
   ) FOR Branch : I[RentalCase];(I /\ sessionNewBranchRC~;'_SESSION';sessionNewBranchRC)
BOX[ "Customer details" : I --INTERFACE "Edit Customer Details"
   BOX[ "* Driver" : rcDriver
      , "* VALID driving license" : rcDrivingLicense
      , "Renter (if different from driver)" : rcRenter
      ]
   , "Contract details" : I --INTERFACE "Edit Contract Details"
   BOX[ "* Pick-up branch" : contractedPickupBranch
      , "* Drop-off branch" : contractedDropoffBranch
      , "* Start date" : contractedStartDate
      , "* End date" : contractedEndDate
      , "* Car type" : contractedCarType
      , "Available car types at pick-up branch" : contractedPickupBranch;carAvailableAt~;carType
      ]
   , "Assign a car"       : I --INTERFACE "Car Assignment and Pickup"
   BOX[ "Available Types" : sessionNewBranchRC~;sessionBranch;carAvailableAt~;carType
      BOX[ "Type"     : I
         , "Euro/day" : rentalTariffPerDay
         ]
      , "Selected Type"  : contractedCarType
      , "Available cars" : contractedCarType;carType~ /\ sessionNewBranchRC~;sessionBranch;carAvailableAt~
      , "Selected car"   : rcAssignedCar
      , "Are car keys handed over?" : rcKeysHandedOverQ
      ]
   , "Projected costs" : I  --INTERFACE "Show Projected Costs"
   BOX[ "Daily charge (Eur)" : contractedCarType;rentalTariffPerDay
      , "Period (days)"      : contractualRentalPeriod
      , "Rental charge (Eur)": contractualBasicCharge
      ]
   , "New rental request" : I
   BOX[ "Submit this rental request?" : rcBranchRequestedQ
      , "Has rental been promised?" : rentalHasBeenPromised;V;'Yes'[YesNoAnswer] \/ (I /\ -rentalHasBeenPromised);V;'No'[YesNoAnswer]
      ]
   ]

INTERFACE "Pick-up (Person)" 
   ( sessionToday
   , sessionBranch
   , sessionNewBranchRC
   , sessionPickupPerson
   , sessionDroppedOffCar
   , sessionDroppedOffPerson 
-- Edit Contract Details
-- , contractedStartDate
   , contractedEndDate
   , contractedCarType
-- , contractedPickupBranch
   , contractedDropoffBranch
-- Edit Customer Details
   , rcRenter
   , rcDriver
   , rcDrivingLicense
-- Car Assignment
   , contractedCarType
   , rcAssignedCar
   , rcKeysHandedOverQ
-- Other stuff
   , rcBranchRequestedQ
   ) FOR Branch : I[RentalCase]
                  /\ (rcRenter \/ rcDriver);sessionPickupPerson~;'_SESSION';sessionBranch;contractedPickupBranch~
                  /\ rentalHasBeenPromised
                  /\ -rentalHasBeenStarted
BOX[ "Customer details" : I --INTERFACE "Edit Customer Details"
   BOX[ "* Driver" : rcDriver
      , "* VALID driving license" : rcDrivingLicense
      , "Renter (if different from driver)" : rcRenter
      ]
   , "Contract details" : I --INTERFACE "Edit Contract Details"
   BOX[ "* Pick-up branch" : contractedPickupBranch
      , "* Drop-off branch" : contractedDropoffBranch
      , "* Start date" : contractedStartDate
      , "* End date" : contractedEndDate
      , "* Car type" : contractedCarType
      , "Available car types" : contractedPickupBranch;carAvailableAt~;carType
      BOX[ "Type"     : I
         , "Daily tariff" : rentalTariffPerDay
         , "Excess tariff" : excessTariffPerDay
         ]
      , "Available cars" : contractedCarType;carType~ /\ sessionNewBranchRC~;sessionBranch;carAvailableAt~
      , "Selected car"   : rcAssignedCar
      ]
   , "Projected costs" : I  --INTERFACE "Show Projected Costs"
   BOX[ "Daily charge (Eur)" : contractedCarType;rentalTariffPerDay
      , "Period (days)"      : contractualRentalPeriod
      , "Rental charge (Eur)": contractualBasicCharge
      ]
   , "Promising pick-up and drop-off" : I
   BOX[ "Are car keys handed over?" : rcKeysHandedOverQ
      , "Has rental started?" : rentalHasBeenStarted;V;'Yes'[YesNoAnswer] \/ (I /\ -rentalHasBeenStarted);V;'No'[YesNoAnswer]
      ]
   ]

PROCESS "Branch Interface: Handling New Rentals and Pickups"
PURPOSE PROCESS "Branch Interface: Handling New Rentals and Pickups"
{+The interfaces provided for branch offices, related to handling new rentals and pickups, provide some automated functionality. This section describes the features for filling in or changing the contents of forms that are presented in such interfaces. The assumption is that this interface is only provided within branch offices, allowing EU-Rent employees to create new rental applications for 'walk in customers' (see P2:1).-}

PURPOSE RULE "The branch that fills in the request is the pick-up branch"
{+When a rental request is filled in by a branch, this branch will play the role of pick-up branch.-}
ROLE ExecEngine MAINTAINS "The branch that fills in the request is the pick-up branch"
RULE "The branch that fills in the request is the pick-up branch":
   (I /\ -rentalHasBeenStarted);(sessionNewBranchRC~ \/ rentalHasBeenPromised;(rcRenter \/ rcDriver);sessionPickupPerson~);'_SESSION';sessionBranch |- contractedPickupBranch
VIOLATION (TXT "{EX} InsPair;contractedPickupBranch;RentalCase;", SRC I, TXT ";Branch;", TGT I)

PURPOSE RULE "Car availability at branch"
{+When a contract is being created, cars and/or branches may only be selected if such cars are available at these branches.-}
RULE "Car availability at branch":  contractedCarType~;(I /\ sessionNewBranchRC~;'_SESSION';sessionNewBranchRC);contractedPickupBranch |- carType~;carAvailableAt
MEANING "When creating a new rental contract, car types and pick-up branch must be selected such that the branch has cars of that type available."
VIOLATION (TXT "Cars of type ", SRC I, TXT " are not available at ", TGT I)

PURPOSE RULE "Auto submit new branch request"
{+When a rental request in a branch is filled in, and they keys have already been handed over, the request is considered to be submitted.-}
ROLE ExecEngine MAINTAINS "Auto submit new branch request"
RULE "Auto submit new branch request": '_SESSION';sessionNewBranchRC;(I /\ rcAssignedCar;rcAssignedCar~);rcKeysHandedOverQ;'Yes' |- sessionNewBranchRC;rcBranchRequestedQ
VIOLATION (TXT "{EX} InsPair;rcBranchRequestedQ;RentalCase;", SRC I, TXT ";YesNoAnswer;", TGT I)

PURPOSE RULE "Assigning a car to a rental"
{+Branch offices may only assign a car to a (new or existing) rental if this car is available at that branch.-}
RULE "Assigning a car to a rental":
   '_SESSION'
   ;( sessionNewBranchRC
    \/ (  sessionBranch;contractedPickupBranch~
       /\ sessionPickupPerson;(rcRenter \/ rcDriver)~
       )
   );(rentalHasBeenPromised /\ -rcCarHasBeenPickedUp);rcAssignedCar 
|- sessionBranch;carAvailableAt~
MEANING "A branch office may only assign cars that are available at that location."
VIOLATION (TGT I, TXT "is not available at ", SRC sessionBranch)

PURPOSE RULE "Car key handover to the driver"
{+When a branch office has assigned a car to a (new or existing) rental, the keys must be handed to the contracted driver.-}
ROLE Branch MAINTAINS "Car key handover to the driver"
RULE "Car key handover to the driver": 
   '_SESSION'
   ;(  ( sessionNewBranchRC
        \/ (  sessionBranch;contractedPickupBranch~
           /\ sessionPickupPerson;(rcRenter \/ rcDriver)~
           )
      );(rentalHasBeenPromised /\ -rcCarHasBeenPickedUp)
      ;rcAssignedCar
   /\ 
      sessionBranch;carAvailableAt~
   )   
|- sessionNewBranchRC;rcKeysHandedOverQ;'Yes';V
VIOLATION (TXT "Hand over the car keys of ", TGT I, TXT " to (", SRC sessionNewBranchRC;rcDriver)

ENDPROCESS
------------------------------------------------------------
sessionDroppedOffCar :: SESSION * Car [UNI]

INTERFACE "Drop-off (Car)" 
   ( sessionToday
   , sessionBranch
   , sessionNewBranchRC
   , sessionPickupPerson
   , sessionDroppedOffCar
   , sessionDroppedOffPerson 
-- Drop-off details
   , contractedDropoffBranch
   , contractedEndDate
   , rcDroppedOffCar
   , rcDroppedOffBranch
   , rcDroppedOffDate
-- Other stuff
   , rentalIsPaidQ
   ) FOR Branch : I[RentalCase]
                  /\ rcAssignedCar;sessionDroppedOffCar~;'_SESSION';V
                  /\ rcCarHasBeenPickedUp /\ -rentalHasBeenEnded 
BOX[ "Contract details" : I  -- INTERFACE "Show Contract Details"
   BOX[ "Pick-up branch" : contractedPickupBranch
      , "Drop-off branch" : contractedDropoffBranch
      , "Start date" : contractedStartDate
      , "End date" : contractedEndDate
      , "Car type" : contractedCarType
      , "Issued car" : rcAssignedCar
      ]
   , "Customer details" : I  -- INTERFACE "Show Customer Details"
   BOX[ "Driver" : rcDriver
      , "VALID driving license" : rcDrivingLicense
      , "Renter" : rcRenter
      ]
   , "Drop-off details" : I  -- INTERFACE "Edit Drop-off Details"
   BOX[ "Contract drop-off branch" : contractedDropoffBranch
      , "Contract drop-off end date" : contractedEndDate
      , "Dropped-off car" : rcDroppedOffCar
      , "Actual drop-off branch" : rcDroppedOffBranch
      , "Acutal drop-off date" : rcDroppedOffDate
      ]
   , "Billing details"  : I  -- INTERFACE "Show Billing Details"
   BOX[ "Part 1: Basic Charge" : I
      BOX[ "Number of days" : rentalPeriod
         , "Tariff per day" : rcAssignedCar;carType;rentalTariffPerDay
         , "Basic charge" : rentalBasicCharge
         ]
      , "Part 2: Penalty charge for exceeding contracted duration" : I
      BOX[ "Number of days" : rentalExcessPeriod
         , "Tariff per day" : rcAssignedCar;carType;excessTariffPerDay
         , "Penalty charge" : rentalPenaltyCharge
         ]
      , "Part 3: Penalty charge for uncontractual drop-off": I
      BOX[ "Contracted drop-off branch" : contractedDropoffBranch
         , "Actual drop-off branch" : rcDroppedOffBranch
         , "Distance (km)": (rcDroppedOffBranch;distbranch~ /\ contractedDropoffBranch;distbranch~);distance
   --       , "Distance tariff" : yyy
         , "Penalty charge" : rentalLocationPenaltyCharge
         ]
     , "TOTAL charge" : rentalCharge
     ]
   , "Payment received?" : rentalIsPaidQ
   ]

INTERFACE "Drop-off (Person)" 
   ( sessionToday
   , sessionBranch
   , sessionNewBranchRC
   , sessionPickupPerson
   , sessionDroppedOffCar
   , sessionDroppedOffPerson 
-- Drop-off details
   , contractedDropoffBranch
   , contractedEndDate
   , rcDroppedOffCar
   , rcDroppedOffBranch
   , rcDroppedOffDate
-- Other stuff
   , rentalIsPaidQ
   ) FOR Branch : I[RentalCase]
                  /\ (rcRenter \/ rcDriver);sessionDroppedOffPerson~;'_SESSION';V
                  /\ rcCarHasBeenPickedUp /\ -rentalHasBeenEnded 
BOX[ "Contract details" : I  -- INTERFACE "Show Contract Details"
   BOX[ "Pick-up branch" : contractedPickupBranch
      , "Drop-off branch" : contractedDropoffBranch
      , "Start date" : contractedStartDate
      , "End date" : contractedEndDate
      , "Car type" : contractedCarType
      , "Issued car" : rcAssignedCar
      ]
   , "Customer details" : I  -- INTERFACE "Show Customer Details"
   BOX[ "Driver" : rcDriver
      , "VALID driving license" : rcDrivingLicense
      , "Renter" : rcRenter
      ]
   , "Drop-off details" : I  -- INTERFACE "Edit Drop-off Details"
   BOX[ "Contract drop-off branch" : contractedDropoffBranch
      , "Contract drop-off end date" : contractedEndDate
      , "Dropped-off car" : rcDroppedOffCar
      , "Actual drop-off branch" : rcDroppedOffBranch
      , "Acutal drop-off date" : rcDroppedOffDate
      ]
   , "Billing details"  : I  -- INTERFACE "Show Billing Details"
   BOX[ "Part 1: Basic Charge" : I
      BOX[ "Number of days" : rentalPeriod
         , "Tariff per day" : rcAssignedCar;carType;rentalTariffPerDay
         , "Basic charge" : rentalBasicCharge
         ]
      , "Part 2: Penalty charge for exceeding contracted duration" : I
      BOX[ "Number of days" : rentalExcessPeriod
         , "Tariff per day" : rcAssignedCar;carType;excessTariffPerDay
         , "Penalty charge" : rentalPenaltyCharge
         ]
      , "Part 3: Penalty charge for uncontractual drop-off": I
      BOX[ "Contracted drop-off branch" : contractedDropoffBranch
         , "Actual drop-off branch" : rcDroppedOffBranch
         , "Distance (km)": (rcDroppedOffBranch;distbranch~ /\ contractedDropoffBranch;distbranch~);distance
   --       , "Distance tariff" : yyy
         , "Penalty charge" : rentalLocationPenaltyCharge
         ]
     , "TOTAL charge" : rentalCharge
     ]
   , "Payment received?" : rentalIsPaidQ
   ]

PROCESS "Branch Interface: Handling Drop-offs and Payment"
PURPOSE PROCESS "Branch Interface: Handling Drop-offs and Payment"
{+The interfaces provided for branch offices, related to handling drop-offs, bill presentment and receiving payment, provide some automated functionality. This section describes the features for filling in or changing the contents of forms that are presented in such interfaces. The assumption is that this interface is only provided within branch offices, allowing EU-Rent employees to handle the dropping off of cars and obtaining rental payments.-}

PURPOSE RULE "Accepting dropped-off car"
{+When the keys of a car are returned (and the branch employee has checked that the car has been returned is in good order), the car's license plate must be entered to complete the drop-off.-}
ROLE ExecEngine MAINTAINS "Accepting dropped-off car"
RULE "Accepting dropped-off car": (I /\ rcCarHasBeenPickedUp /\ -rcCarHasBeenDroppedOff);rcAssignedCar;(I /\ sessionDroppedOffCar~;'_SESSION';sessionDroppedOffCar) |- rcDroppedOffCar
VIOLATION (TXT "{EX} InsPair;rcDroppedOffCar;RentalCase;", SRC I, TXT ";Car;", TGT I)

PURPOSE RULE "Dropped off car sanity check"
{+In order to be sure that the car that is presented for a drop-off should be processed, it must be verified that there is a rental contract for this car that says that the car has been picked-up but not yet dropped-off.-}
RULE "Dropped off car sanity check": I /\ sessionDroppedOffCar~;'_SESSION';sessionDroppedOffCar |- rcAssignedCar~;(I /\ rcCarHasBeenPickedUp /\ -rcCarHasBeenDroppedOff);rcAssignedCar
MEANING "A car can only be returned if it is in the possession of the renter or driver."
VIOLATION (TGT I, TXT " cannot be processed (it is available at branch ", TGT carAvailableAt, TXT ").")

PURPOSE RULE "Cars are returned to the drop-off branch"
{+When a car is returned to a branch, this branch will play the role of drop-off branch.-}
ROLE ExecEngine MAINTAINS "Cars are returned to the drop-off branch"
RULE "Cars are returned to the drop-off branch":
   (I /\ -rcCarHasBeenDroppedOff);rcDroppedOffCar;sessionDroppedOffCar~;'_SESSION';sessionBranch |- rcDroppedOffBranch
VIOLATION (TXT "{EX} InsPair;rcDroppedOffBranch;RentalCase;", SRC I, TXT ";Branch;", TGT I)

PURPOSE RULE "Cars are returned on the drop-off date"
{+When a car is returned to a branch, that date is the drop-off date.-}
ROLE ExecEngine MAINTAINS "Cars are returned on the drop-off date"
RULE "Cars are returned on the drop-off date":
   (I /\ -rcCarHasBeenDroppedOff);rcDroppedOffCar;sessionDroppedOffCar~;'_SESSION';sessionToday |- rcDroppedOffDate
VIOLATION (TXT "{EX} InsPair;rcDroppedOffDate;RentalCase;", SRC I, TXT ";Date;", TGT I)

PURPOSE RULE "Car drop-off handling"
{+Handling a dropped-off car means that payment for the associated rental is to be obtained.-}
ROLE Branch MAINTAINS "Car drop-off handling"
RULE "Car drop-off handling": '_SESSION';sessionDroppedOffCar;rcAssignedCar~;(I /\ rcCarHasBeenDroppedOff /\ -rentalHasBeenEnded) |- V;(I /\ rentalIsPaidQ;'Yes';rentalIsPaidQ~)
VIOLATION (TXT "Payment must be obtained to end the rental of ", TGT rcAssignedCar)

ENDPROCESS
-----------------------------------------------------------
ENDCONTEXT