CONTEXT MessagingService IN ENGLISH
PURPOSE CONTEXT MessagingService
{+This service allows applications to send messages to Perons, in two ways:
1. by populating the relations `sessionMsgPerson[SESSION*Person]` and `sessionMsgText[SESSION*Text]`, where:
   - the SESSION atom must be `_SESSION`;
   - the Person atom must be associated with a CEP that an application can use for sending messages;
   - Text is an (arbitrary) text of type ALPHANUMERIC.
2. by creating a `MsgSendRequest` atom, and populating at least the relations `msgsrPerson` and `msgsrText`,
   and optionally populating the other relations 
-}

INCLUDE "MSG_ContactEndpoints.adl"

--[Message Send Requests]--
msgsrSession  :: MsgSendRequest * SESSION [UNI]  -- Session from which the message is sent
msgsrSender   :: MsgSendRequest * Person  [UNI]  -- Person that was logged into the session that sent the message.
msgsrPerson   :: MsgSendRequest * Person  [UNI,TOT]
msgsrText     :: MsgSendRequest * MsgText [UNI,TOT]   REPRESENT MsgText  TYPE ALPHANUMERIC
msgsrCEPMeans :: MsgSendRequest * CEPMeans       -- ways by which the message should be delivered.
msgsrTrxDATIM :: MsgSendRequest * DateTime            REPRESENT DateTime TYPE DATETIME

RULE "The sender of a message may only be the logged-in user of a specified session": 
   msgsrSender |- msgsrSession;sessionUser

--[Messaging service operation]--
RULE "Applications can only send messages to people that have registered a method for doing so":
  '_SESSION';sessionMsgPerson |- V;cepRxFromAppl~;cepConnectsTo
VIOLATION (TXT "This application is not permitted to send messages to ", TGT I)

{-
sessionMsgPerson :: SESSION * Person [UNI] -- Person to send the message to
sessionMsgText :: SESSION * MsgText [UNI] -- Text to be sent

ROLE ExecEngine MAINTAINS "Create message send request"
RULE "Create message send request": sessionMsgPerson~;'_SESSION';sessionMsgText |- msgsrPerson~;msgsrText
VIOLATION (TXT "{EX}_;NewStruct_;MsgSendRequest"
              ,TXT "_;msgsrPerson_;MsgSendRequest_;_NEW_;Person_;", SRC I
              ,TXT "_;msgsrText_;MsgSendRequest_;_NEW_;MsgText_;", TGT I
              ,TXT "_;msgsrSession_;MsgSendRequest_;_NEW_;SESSION_;", SRC V;'_SESSION'[SESSION]
              ,TXT "_;msgsrSender_;MsgSendRequest_;_NEW_;Person_;", SRC V;'_SESSION';sessionUser
          ,TXT "{EX} DelPair;sessionMsgPerson;SESSION;", SRC V;'_SESSION'[SESSION], TXT ";Person;", SRC sessionMsgPerson
          ,TXT "{EX} DelPair;sessionMsgText;SESSION;", SRC V;'_SESSION'[SESSION], TXT ";MsgText;", TGT I
          )
-}

ROLE ExecEngine MAINTAINS "Insert CEPMeans to message send request"
RULE "Insert CEPMeans to message send request": 
  (I-(msgsrTrxDATIM;msgsrTrxDATIM~));msgsrPerson;cepConnectsTo~;cepRxFromAppl;cepMeans |- msgsrCEPMeans
VIOLATION (TXT "{EX} InsPair;msgsrCEPMeans;MsgSendRequest;", SRC I, TXT ";CEPMeans;", TGT I)

ROLE ExecEngine MAINTAINS "Remove CEPMeans to message send request"
RULE "Remove CEPMeans to message send request": 
   msgsrCEPMeans |- msgsrPerson;cepConnectsTo~;cepRxFromAppl;cepMeans
VIOLATION (TXT "{EX} DelPair;msgsrCEPMeans;MsgSendRequest;", SRC I, TXT ";CEPMeans;", TGT I)

{- For every CEPMeans, we envisage that there is a Service that processes a MsgSendRequest as follows:
1. Send the MsgText to the Person.
2. Set the DateTime to the time that the MsgText was sent.
3. Remove the CEPMeans from the MsgSendRequest.
This allows message send requests to be deleted once their MsgText has been sent by all CEPMeans-services.
-}
ROLE ExecEngine MAINTAINS "Delete message send request"
RULE "Delete message send request": (I-(msgsrCEPMeans;msgsrCEPMeans~));msgsrTrxDATIM |- -V
VIOLATION (TXT "{EX} DelAtom;MsgSendRequest;", SRC I)

ENDCONTEXT