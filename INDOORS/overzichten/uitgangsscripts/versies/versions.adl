CONTEXT Versions

CONCEPT Version 
PATTERN Versions
lt :: Version * Version {-[ASY,TRN]-} PRAGMA "" " is older than ".
PURPOSE RELATION  lt
{+This relation represents the less-than relation on versions.
-}
refer :: Id -> Object                        PRAGMA "" " refers to ".
PURPOSE RELATION  refer
{+An identifier (Id) is used to refer to an object.
Even if the object changes during its life (e.g. a document),
the identifier remains the name under which the most recent version is reachable.
-}
identifier :: Object -> Id                        PRAGMA "" " is identified by " "".
PURPOSE RELATION  identifier
{+An object is recognised by an identifier.
-}
version :: Object -> Version                   PRAGMA "The version of " " is ".
PURPOSE RELATION  version
{+Every object has a version.
-}
pre :: Event -> Object                     PRAGMA "" " has changed ".
PURPOSE RELATION  pre
{+When an event occurs, it may change an object. That object can be seen as an input to the operation that is being perfomed.
-}
post :: Event -> Object                     PRAGMA "" " has produced ".
PURPOSE RELATION  post
{+When an event occurs, this results in a changed object. That object can be seen as an output to the operation that is being perfomed.
-}
evolves :: Object * Object                     PRAGMA "" " has been changed into".
PURPOSE RELATION  evolves
{+When an event occurs, this results in a changed object. That object can be seen as an output to the operation that is being perfomed.
-}
changes :: Event * Event                       PRAGMA "" " is an updating event.".
PURPOSE RELATION  changes
{+When an event occurs, this results in a changed object. That object can be seen as an output to the operation that is being perfomed.
-}

-- KEY storage: Object(identifier,version)
RULE identifier;identifier~ /\ version;version~ |- I
  PHRASE "When the identifier and version number is known, any object is uniquely determined. Note the difference with 'object', which identifies the most recent version of an object by the identifier only."
RULE version~;identifier;refer;version |- lt \/I[Version]
  PHRASE "The relation refer points to the most recent version of an object."
--evolves = -I/\identifier;identifier~
RULE changes = pre;evolves;post~ 
  PHRASE "An event is said to change an object if the pre-object is not equal to the post-object, but both do share the same identifier."
RULE version~;pre~;changes;post;version |- lt
  PHRASE "The occurrence of an event increases the version number of objects."
ENDPATTERN

ENDCONTEXT