CONTEXT NullBug

INTERFACE Overview : I[ONE] BOX [ as: V[ONE*A] ]

INTERFACE A : I[A]
BOX [ r1 : r1
    , notR1 : -r1
    , notR1Tot : -r1 ; -r1~      -- BUG, should not be empty
    , notR1Totp : (-r1) ; -r1~   -- this one works okay, so the problem is with one of the smart patterns in selectExpr
    ]
 
r2 :: A*C [UNI,SUR]
  = [ ("a1", "c1") ]
    
r1 :: A*B [UNI]

fillB :: B*B [UNI,TOT,SUR,INJ]
  = [ ("b1","b1") ]

-- The created tables are 
--      A          B          C
-- ____________   __________  ____
-- |A |r2| r1 |   |B |fillB|  |C |
-- |--+--+----|   |--|-----|  |--|
-- |a1|c1|NULL|   |b1| b1  |  |c1|
-- |----------|   |--|-----|  |--|
--
-- Also seems buggy. Why is the concept table of C not a column in A?
-- It may contain duplicates, but some concept tables also contain duplicates (which may instead be the bug here)

RULE nullBug : -r1                       -- BUG: rule should hold but fails with violation ("a1", "")
RULE nullBugComposition1 : (-r1 ; -r1~)  -- BUG: rule should hold but fails with violation ("a1", "a1")

PROCESS Test
ROLE Tester MAINTAINS nullBugComposition1
ENDPROCESS

-- BUG
--RULE totalityBug : I |- (-r1); (-(r1~)) \/ r1; r1~
-- this rule yields a violation of "tot r1", but totality of r is not an implication of this rule

--RULE relAddBug : r1~ ! r2
-- creates an SQL error because of a problem in selectExpr for ERad

ENDCONTEXT