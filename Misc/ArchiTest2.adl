CONTEXT ArchiTest2

{- RJ/20130308: Dit test bestand vertaalt niet als zodanig, terwijl dat wel zou kunnen/moeten
Apart hierbij is dat als je de regel 'R005ok' meeneemt,  regel R005nietOK ook geen problemen meer oplevert.
-}

PATTERN ArchiTest2


RULE R005nietOK: connect[Node * "Communication path"] |- contain;connect;realise  -- This rule is not covered by the Archimate reference manual.
 MEANING "A"

--RULE R005ok: connect[Node * "Communication path"] |- contain[Node*Device];connect[Device*Network];realise[Network*"Communication path"]  -- This rule is not covered by the Archimate reference manual.
 MEANING "A"

CONCEPT Artifact "a physical piece of information that is used or produced in a software development process, or by deployment and operation of a system. An artifact represents a concrete element in the physical world. It is typically used to model (software) products such as source files, executables, scripts, database tables, messages, documents, specifications, and model files. An instance (copy) of an artifact can be deployed on a node. The name of an artifact should preferably be the name of the file it represents, e.g. ‘order.jar’." "Archimate"
SPEC Artifact ISA "Technology concept"

CONCEPT Node "a computational resource upon which artifacts may be deployed for execution. Nodes are active processing elements that execute and process artifacts, which are the representation of components and data objects. Nodes are for example used to model application servers, database servers, or client workstations. They can consist of sub-nodes representing physical devices and execution environments for artifacts. Nodes can be interconnected by communication paths. The name of a node should preferably be a noun." "Archimate"
SPEC Node ISA "Technology concept"

CONCEPT Device "a physical computational resource upon which artifacts may be deployed for execution. A device is a specialisation of a node that represents a physical resource with processing capability. It is typically used to model hardware systems such as mainframes, PCs, or routers. Usually, they are part of a node together with system software. Devices may be composite, i.e., consist of sub-devices. Devices can be interconnected by networks. The name of a device should preferably be a noun referring to the type of hardware, e.g. “IBM zSeries mainframe”." "Archimate"
SPEC Device ISA "Technology concept"


CONCEPT "System software" "represents a software environment for specific types of components and objects that are deployed on it in the form of artifacts. System software is a specialisation of a node that is used to model the software environment in which artifacts run. This can be e.g. an operating system, a J2EE application server, a CORBA ORB, a database system, or a workflow engine. Also, system software can be used to represent e.g. communication middleware. Usually, system software is combined with a device representing the hardware environment to form a general node. The name of a device should preferably be a noun referring to the type of exection environment, e.g. “J2EE server”." "Archimate"
SPEC "System software" ISA "Technology concept"

contain :: Node * Device PRAGMA "Node " " contains Device ".
contain :: Node * "System software" PRAGMA "Node " " contains System software ".
contain :: "System software" * "System software" PRAGMA "System software " " contains System software ".

connect :: Node * "Communication path" PRAGMA "Node " " is connected to Communication path ".
connect :: Device * Network PRAGMA "Device " " is connected to network ".
connect :: Node * "Communication path" PRAGMA "Node " " is connected to Communication path ".

realise :: "Representation" * "Business object" PRAGMA "Representation " " realises Business object ".
realise :: "Data object" * "Business object" PRAGMA "Data object " " realises Business object ".
realise :: "Business function" * "Business service" PRAGMA "Business function " " may realise Business service ".
realise :: "Business interaction" * "Business service" PRAGMA "Business interaction " " may realise Business service ".
realise :: "Business process" * "Business service" PRAGMA "Business process " " may realise Business service ".
realise :: "Application behavioural concept" * "Application service" PRAGMA "Application behavioural concept " " realises Application service ".
realise :: "Application component" * "Application function" PRAGMA "Application component " " realises (part of) Application function ".
realise :: Artifact * "Application component" [SUR] PRAGMA "Artifact " " realises Application component ".
realise :: Artifact * "Data object" [SUR] PRAGMA "Artifact " " realises Data object ".
realise :: Network * "Communication path" PRAGMA "Network " " realises Communication path ".
realise :: "Node" * "Infrastructure service" [TOT,SUR] PRAGMA "Node " " realises Infrastructure service ".

ENDPATTERN
ENDCONTEXT