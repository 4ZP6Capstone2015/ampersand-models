CONTEXT "Login" IN ENGLISH LATEX
PURPOSE CONTEXT "Login"
{+Het 'inloggen' (van een user in een session) bestaat uit het identificeren en authenticeren van die user en het vaststellen welk Account bij die user hoort, zodat dit Account met de session kan worden geassocieerd. Van daaruit kan de session context verder worden opgebouwd. Het 'uitloggen' (van een user uit een session) bestaat uit het verwijderen van de session, om te voorkomen dat een andere user later in die session zal gaan inloggen; dat is wenselijk omdat hiermee altijd ondubbelzinnig duidelijk is wie voor (de handelingen in) welke session verantwoordelijk is. Dit hoofdstuk beschrijft de betreffende functionaliteit, die (op het inloggen na) volledig geautomatiseerd verloopt. De afspraken zijn zodanig opgesteld dat het vrij eenvoudig is om een faciliteit te bouwen die het tijdelijk opschorten van een session mogelijk maakt, zoals dat wel gebeurt bij screensavers. Dat is echter niet verder gespecificeerd.-}
{- ----------- LOGIN FUNCTIONALITY -------------
 * Enable/disable built-in login functionality -- see comments in 'localSettings.php'
 * **In 'localSettings.php', the variable 'LOGIN_ENABLED' must be assigned the value 'true'**
 * This requires the following &-INTERFACE defintions:
-} INTERFACE "SessionRoles" FOR NobodyInParticular : sessionRoles[SESSION*Role] BOX [ "ignored": I]
{- Notes: 
   1) The name of the interface MUST be 'SessionRoles'
   2) The 'FOR NobodyInParticular' ensures that the INTERFACE does not show up in a menu.
   3) The expression between the ':' and 'BOX', must provide all pairs (s,r), where r is an activated role in SESSION s.
   4) The SRC-concept of the expression between the ':' and 'BOX' MUST be 'SESSION'
   5) The TGT-concept of that expression between the ':' and 'BOX' MUST be 'Role'
   6) In order to ensure that the concept 'Role' contains all <Rolename>s that are used within the FrontEnd, e.g. for
      - MAINTAINing rules 
      - accessing INTERFACEs
      - using extensions (e.g. ExcelImport, or the ExecEngine API, as specified in the config files):
      you should include statements such as the following, and make sure all <Rolename>s are mentioned:
      ** POPULATION Role CONTAINS [ "<Rolename1>", "<Rolename2>", ... ]**
   7) The text 'BOX [ "ignored": I ]' is not used, so it can be replaced with anything that the parser accepts.  
   8) REPRESENT Role TYPE <something> is not allowed: A 'Role' may not be a scalar (it must be an Object-type)
-}	INTERFACE "SessionUser" FOR NobodyInParticular : '_SESSION';V[SESSION*User] BOX [ "ignored": I]
{- Notes:
   1) The name of the interface must be 'SessionUser'
   2) The 'FOR NobodyInParticular' ensures that the INTERFACE does not show up in a menu.
   3) The SRC-concept of the expression between the ':' and 'BOX' MUST be 'SESSION'
   4) The TGT-concept of the interface expression must be 'User'
   5) The text 'BOX [ "ignored": I ]' is not used, so it can be replaced with anything that the parser accepts.
   6) REPRESENT User TYPE <something> is not allowed: A 'User' may not be a scalar (it must be an Object-type)
-}
-----------------------------------------------------------

INCLUDE "../SIAM/SIAM_Accounts.adl"

--[Login, Logout]------------------------------------------

loginUserid   :: SESSION * UserID [UNI]
loginPassword :: SESSION * Password [UNI]
logoutRequest :: SESSION * SESSION [PROP]

RULE "Authenticate user": loginUserid~;loginPassword |- accUserid~;accPassword
MESSAGE "You may only login with valid credentials (username/password)."
VIOLATION (TXT "The UserID or Password do not match. Please try again.")
--VIOLATION (TXT "Voor de combinatie UID/PW = ('", SRC I, TXT "','", TGT I, TXT "') bestaat geen account.")

ROLE ExecEngine MAINTAINS "Login"
RULE "Login": (loginUserid;accUserid~ /\ loginPassword;accPassword~) |- sessionAccount
MEANING "The user in a (new) session must be authenticated."
VIOLATION (TXT "{EX} InsPair;sessionAccount;SESSION;", SRC I, TXT ";Account;", TGT I
          ,TXT "{EX} DelPair;loginUserid;SESSION;", SRC I, TXT ";UserID;", SRC loginUserid
          ,TXT "{EX} DelPair;loginPassword;SESSION;", SRC I, TXT ";Password;", SRC loginPassword -- Passwords moet je niet willen onthouden.
          ,TXT "{EX} RerunExecEngine;After a login, session variables need to be set"
          )

ROLE ExecEngine MAINTAINS "Logout"
RULE "Logout": '_SESSION';logoutRequest |- -V 
MEANING "A request to logout in a session must be processed in that session."
VIOLATION (TXT "{EX} DelAtom;SESSION;", SRC I)

--[Session deactivation/reactivation]----------------------

PURPOSE RELATION firstSessionAccount
{+Om het (later) mogelijk te maken een session op te schorten moet van de session het eerste sessionaccount onthouden worden, omdat aan het eind van deze opschorting de oorspronkelijke user weer moet kunnen inloggen, en niet iemand anders.-}
firstSessionAccount :: SESSION * Account [UNI]
MEANING "Het Account dat in een session als eerste is geauthenticeerd, moet worden onthouden."

ROLE ExecEngine MAINTAINS "Het eerst geauthenticeerde session account registreren"
RULE "Het eerst geauthenticeerde session account registreren": 
   ('_SESSION'[SESSION] /\ -(firstSessionAccount;firstSessionAccount~));sessionAccount |- firstSessionAccount
MEANING "Voor de eerste keer inloggen mag met elk (geauthenticeerd) account."
VIOLATION (TXT "{EX} InsPair;firstSessionAccount;SESSION;", SRC I, TXT ";Account;", TGT I)

PURPOSE RULE "Integriteit van session accounts"
{+Er mag hooguit één user inloggen in een session, zodat kan worden gegarandeerd dat het ondubbelzinnig duidelijk is welke persoon verantwoordelijk is voor wat er in een session gebeurt. Dat moet dus ook worden gecontroleerd.-}
RULE "Integriteit van session accounts": 
   ('_SESSION'[SESSION] /\ firstSessionAccount;firstSessionAccount~);sessionAccount |- firstSessionAccount 
MEANING "In een session mag hoogstens één account worden gebruikt."
MESSAGE "U moet met uw eerder ingevoerde credentials inloggen."
VIOLATION (TXT "In deze sessie was '", SRC firstSessionAccount;accUserid, TXT "' ingelogd.")

--[Glossary]-----------------------------------------------

PURPOSE CONCEPT UserID
{+The User ID (gebruikersnaam) van een account identificeert dat account en daarmee ook diens eigenaar (d.w.z. de persoon die als enige geacht wordt van dat account gebruik te maken. Een goed gebruik is om hiervoor een e-mailadres te gebruiken waarop de user van het account bereikbaar is.-}
CONCEPT UserID "een rij karakters (bijvoorbeeld het e-mailadres van de user), die een account identificeert binnen het systeem"
REPRESENT UserID TYPE ALPHANUMERIC

PURPOSE CONCEPT Password
{+Om het moeilijk te maken dat het Account van een zeker persoon door een ander wordt gebruikt, registreert het systeem wachtwoorden.
Door een wachtwoord geheim te houden ontstaat enige mate van zekerheid dat het systeem gebruikt word door (dan wel met medeweten van) de persoon op wiens naam het wachtwoord is geregistreerd.-}
CONCEPT Password "een rij karakters, die geheim gehouden kan worden door een persoon, en door die persoon gebruikt moet worden om toegang te krijgen tot het systeem"
REPRESENT Password TYPE PASSWORD

-----------------------------------------------------------
ENDCONTEXT