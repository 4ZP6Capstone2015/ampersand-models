CONTEXT RAP
PURPOSE CONTEXT "RAP" IN ENGLISH LATEX{+The Repository for Ampersand Projects (RAP) is an information system to
support rule-based design with Ampersand. RAP is intended for education
of rule-based design in general with Ampersand as a medium. Ampersand is
a methodology to model information systems and business processes as
rule specifications. An Ampersand project is an instance of a process by
the Ampersand methodology including input and output design artifacts. There is
a domain specific language for Ampersand to write Ampersand rule
specifications. The Ampersand language is a formal language based on
relation algebra. 

The RAP web application is generated with the
Ampersand compiler from the Ampersand rule specification file of RAP. The
same compiler is used to upload a rule specification file into RAP, export a
rule specification file from RAP and generate design artifacts from a rule
specification file in RAP. Aside from bugs, the compiler may fail because of
syntax- or type errors. Therefore, after each upload of a rule specification file, RAP holds either the
rule specification in that file or the parse or type errors causing its
absence. 

A rule specification consists of a context
with a population, conceptual diagrams of the context and rule
violations of the population. The Atlas is the part of RAP to explore and edit
a context. The current Atlas application only allows students to edit
the population of a context. RAP keeps track of changes in the context compared
to the initially uploaded rule specification file. 

The mainstream user of RAP is called a student, while RAP is intended for education. A student
can \emph{load} one rule specification into the Atlas at a single time.
Feedback is given upon the loaded rule specification including feedback on edit actions.
A student has access to earlier created rule specification files.
Metrics of a single specification, subsequent versions, and traces of
versions are available to use for student feedback or management information.-}

PURPOSE PROCESS "AtlasLoad" IN ENGLISH LATEX {+ A student may upload files into RAP with the Ampersand compiler. That file should, however may not, contain a rule specification. A file contains a rule specification only when it passes the parser and type checker of the Ampersand compiler. Files that do not contain a rule specification are uploaded into RAP with a parse or type error. -}
PURPOSE RULE "popchanged" IN ENGLISH LATEX {+ When relationships in a context have changed, the rules in that context may yield a different set of violations. Therefore a change in relationships is reported to a student with a possibility to commit and validate the change made. -}
PURPOSE RULE "parseerror" IN ENGLISH LATEX {+ When a file yielding a parse error is uploaded into RAP, then that error is reported with supportive information to solve the error. -}
PURPOSE RULE "typeerror" IN ENGLISH LATEX {+ When a file yielding a type error is uploaded into RAP, then that error is reported with supportive information to solve the error. -}

PURPOSE PROCESS "Student" IN ENGLISH LATEX {+ RAP is used by students in the course on rule based design at the OUNL. This process is intended to guide that student in its business process c.q. work on the final design exercise, which is completed in steps spread over the course. -}
PURPOSE RULE "multviolations1" IN ENGLISH LATEX {+ Violations of the totality or surjectivity of a relation need to be solved by a student. -}
PURPOSE RULE "multviolations2" IN ENGLISH LATEX {+ Violations of the univalence or injectivity of a relation need to be solved by a student. -}
PURPOSE RULE "multviolations3" IN ENGLISH LATEX {+ Violations of the functional property of a relation need to be solved by a student. -}
PURPOSE RULE "homoviolations" IN ENGLISH LATEX {+ Violations of homogeneous properties of a relation need to be solved by a student. -}
PURPOSE RULE "otherviolations" IN ENGLISH LATEX {+ Violations of rules need to be solved by a student. -}

PURPOSE PATTERN "AtlasLoad" IN ENGLISH LATEX {+ A student may upload files into RAP with the Ampersand compiler. That file should, however may not, contain a rule specification. A file contains a rule specification only when it passes the parser and type checker of the Ampersand compiler. Files that do not contain a rule specification are uploaded into RAP with a parse or type error. -}
PURPOSE RELATION first_loaded_with IN ENGLISH LATEX {+ A file is written for the Ampersand compiler version used when that file was uploaded into RAP for the first time. It is safe to interprete a file by the interpretation implemented in that compiler version. Compatibility of a file with a compiler version may be determined by comparing the interpretation of the first used compiler version with the interpretation of that other compiler version. -}
PURPOSE RELATION initial_atoms IN ENGLISH LATEX {+ Deprecated, not needed anymore. -}
PURPOSE RELATION initial_relationships IN ENGLISH LATEX {+ The initial relationships in a rule specification file need to be known to detect edit actions in RAP that have changed the relationships. -}
PURPOSE RELATION ini_source IN ENGLISH LATEX {+ Deprecated, not needed anymore. -}
PURPOSE RELATION ini_target IN ENGLISH LATEX {+ Deprecated, not needed anymore. -}
PURPOSE RELATION yields_parse_error IN ENGLISH LATEX {+ A file may not contain a rule specification due to a parse error. -}
PURPOSE RELATION possible_action IN ENGLISH LATEX {+ Possible actions to solve a parse error are given to support a student with solving that error. -}
PURPOSE RELATION at_position IN ENGLISH LATEX {+ The position of the parse error is given, such that the student knows where to start looking for the cause of that error.  -}
PURPOSE RELATION expected IN ENGLISH LATEX {+ Information is given about what the parser expected to find at the position of the parse error, to support a support in understanding and solving the parse error. -}
PURPOSE RELATION yields_type_error IN ENGLISH LATEX {+  A file may not contain a rule specification due to a type error. -}
PURPOSE RELATION message IN ENGLISH LATEX {+ Currently, a type error is integrally reported through a single message. -}
PURPOSE RELATION te_parent IN ENGLISH LATEX {+ Work in progress, towards a detailed specification of a type error to replace relation \ref{DefDecl:messageTypeErrorErrorMessage}. -}
PURPOSE RELATION te_position IN ENGLISH LATEX {+ Work in progress, towards a detailed specification of a type error to replace relation \ref{DefDecl:messageTypeErrorErrorMessage}. -}
PURPOSE RELATION te_origtype IN ENGLISH LATEX {+ Work in progress, towards a detailed specification of a type error to replace relation \ref{DefDecl:messageTypeErrorErrorMessage}. -}
PURPOSE RELATION te_origname IN ENGLISH LATEX {+ Work in progress, towards a detailed specification of a type error to replace relation \ref{DefDecl:messageTypeErrorErrorMessage}. -}

PURPOSE PATTERN "FileManagement" IN ENGLISH LATEX {+ All rule specifications in RAP are persisted in rule specification files, which requires file management. RAP uses .adl-files as rule specification files and .adl- and .pop-files to include in rule specification files. First, a student uploads a new rule specification file into RAP. Now, the version of the rule specification in that file - which includes a context - is \emph{loaded} in RAP i.e. that context is active for editing and feedback is given upon that context only. After editing, a student may save changes in a new rule specification file and upload that file into RAP. Loading a file while editing will 'undo' changes in the previously loaded rule specification. After uploading a rule specification file into RAP, a student can generate design artifacts from that file at all times or reload it for editing. Note that uploading is more specific than loading i.e. loading is either uploading a new rule specification or reloading an existing one. -}
PURPOSE RULE "unique file location" IN ENGLISH LATEX {+ A file in RAP is not an actual file on a file system. A file in RAP does refer to a file that exists or may be created on a file system. Therefore the rules of a file system must be maintained within RAP to prevent issues with files. -}
PURPOSE RULE "user roles" IN ENGLISH LATEX {+ Roles in RAP are predefined to make explicit that they are implemented in RAP. -}
PURPOSE RELATION name[File * FileName] IN ENGLISH LATEX {+ Without a file name, a file cannot be stored on a file system i.e. such a file cannot exist. -}
PURPOSE RELATION path IN ENGLISH LATEX {+ Without a path, a file cannot be stored on a file system i.e. such a file cannot exist. -}
PURPOSE RELATION is_created_at IN ENGLISH LATEX {+ The state of the context at the moment of creation of a rule specification file may be of use for historical analysis, maintenance and probably more. The moment of creation of a rule specification file is also of interest to report a sorted list of rule specification files from new to old. A rule specification file is created when it is uploaded into RAP.  -}
PURPOSE RELATION has_uploaded IN ENGLISH LATEX {+ A student needs access to the rule specification files that the student has uploaded into RAP. -}
PURPOSE RELATION is_active_as IN ENGLISH LATEX {+ Mainstream users of RAP may be active in different roles. Roles are used to differentiate in content and functionality presented to a role. The default role of a mainstream user is a student. -}
PURPOSE RELATION from_source IN ENGLISH LATEX {+ By design, every version of rule specification is only persisted in a rule specification file. In fact, only the context of a rule specification is defined in a rule specification file. The rest of the rule specification is derived from that context by the Ampersand compiler, that loads a rule specification into RAP. Thus, the rule specification files are the source of all versions of rule specifications in RAP. -}
PURPOSE RELATION includes IN ENGLISH LATEX {+ A context may be divided over multiple files. In the case of multiple files, files are included by the main rule specification file of that context. -}
PURPOSE RELATION function_parameter IN ENGLISH LATEX {+ Generating design artifacts is the main activity in the rule based design process [fig:generators, RBD]. A function to generate design artifacts - implemented by the Ampersand compiler - may be applied to a rule specification file. -}
PURPOSE RELATION function_description IN ENGLISH LATEX {+ In the implementation of RAP, a student clicks on the description of a function of the Ampersand compiler to invoke it on a rule specification file. -}
PURPOSE RELATION function_id IN ENGLISH LATEX {+ For technical purposes only, a function of the Ampersand compiler can be identified by a number. -}
PURPOSE RELATION may_open_new IN ENGLISH LATEX {+ When a student opens a new file. A copy is made of a predefined rule specification file on the file system with an empty context. The location of that file needs to be known to make a copy. -}
PURPOSE RELATION may_be_exported_to IN ENGLISH LATEX {+ A student may export the population of a context to a file. This file does not exist on the file system yet. -}
PURPOSE RELATION may_be_saved_as  IN ENGLISH LATEX {+ A student may save and upload a context to a new rule specification file. This file does not exist on the file system yet. -}

PURPOSE PATTERN "Metrics" IN ENGLISH LATEX {+ Metrics provide management information on the operational, tactical and strategical level. Operational e.g. the number of rules, relations and concepts are reported to students for 'cycle chasing'. To do: Tactical e.g. a teacher is triggered by metrics to adjust the RAP rules i.e. the feedback reported to students. To do: Strategical e.g. analysis of metrics shows that many students of an educational program struggle with the formality -}
PURPOSE RELATION count_rules IN ENGLISH LATEX {+ Rules are counted to support students with 'cycle chasing'. -}
PURPOSE RELATION count_relations IN ENGLISH LATEX {+ Relations are counted to support students with 'cycle chasing'. -}
PURPOSE RELATION count_concepts  IN ENGLISH LATEX {+ Concepts are counted to support students with 'cycle chasing'. -}

PURPOSE PATTERN "Image" IN ENGLISH LATEX {+ This pattern defines the required structure to refer to images stored outside of RAP. -}
PURPOSE RELATION url IN ENGLISH LATEX {+ RAP contains references to images, which are available through a web server. -}

PURPOSE PATTERN "Conceptual" IN ENGLISH LATEX {+ A visual representation of a conceptual structure may be illustrative to understand elements from the visualized structure. Therefore, conceptual diagrams for parts of a rule specification are generated and stored in RAP. -}
PURPOSE RELATION concept_diagram[Pattern * Image] IN ENGLISH LATEX {+ In practice, a pattern is mainly used as an intuitive container to divide a context syntactically. In response to this practice, a conceptual diagram containing only the elements of a pattern is generated and related to that pattern. -}
PURPOSE RELATION concept_diagram[Concept * Image] IN ENGLISH LATEX {+ Changes in relations in rules in which a concept is involved may have a direct influence on that concept. Those relations are assumed to be the direct surrounding of a concept. A conceptual diagram is generated and related to a concept, which contains the relations in rules in which that concept is involved. -}
PURPOSE RELATION concept_diagram[Rule * Image] IN ENGLISH LATEX {+ A rule is an expression on relations. A conceptual diagram, which contains relations in a rule, is generated and related to that rule. -}

PURPOSE PATTERN "RuleEnforcement" IN ENGLISH LATEX {+ This pattern defines required structure to enable the enforcement of rules. Rules should hold but may be violated. Coping with violations, also called enforcement, of a rule may differ per rule. Currently, all rules in RAP - not the ones of RAP - are enforced identically within RAP i.e. those violations are excepted and reported to a student through the following process rules of RAP: \ref{DefRule:multviolations2}, \ref{DefRule:multviolations3}, \ref{DefRule:homoviolations}, and \ref{DefRule:otherviolations}. Conclude from this pattern that violations are relationships without a human-friendly meaning in RAP. Thus, the student needs to give meaning to the reported violations in RAP. -}
PURPOSE RELATION does_not_hold_because_of IN ENGLISH LATEX {+ A rule holds when its relation - the rule expression - is an equivalent of the equally signed universal relation. Thus, a rule does not hold when there is a relationship in the universal relation, which is not in the relation of the rule. Therefore, a violation of a rule is defined as each relationship in the universal relation, which is not in the relation of that rule. -}

PURPOSE PATTERN "Misc" IN ENGLISH LATEX {+ The miscellaneous pattern contains declarations of relations that do not really fit any other pattern. -}
PURPOSE RELATION example IN ENGLISH LATEX {+ A relation may be related to a pragma, which is divided over three relations: \ref{DefDecl:pragma_95prefixRelationString}, \ref{DefDecl:pragma_95infixRelationString}, and \ref{DefDecl:pragma_95suffixRelationString}. Giving an example of a sentence using the pragma may be more a appealing and intuitive representation of the pragma than the diverted pragma. -}

PURPOSE PATTERN "Context" IN ENGLISH LATEX {+ An Ampersand rule specification assumes a closed world, which is called the context. This means that everything in the context is true; the rest is not. As such, a context serves as a container in which a designer defines all terms, facts and rules including their attributes. -}
PURPOSE RELATION name[Context * ContextName] IN ENGLISH LATEX {+ A context requires a human-friendly name to refer to that context. The context name is trivial within a context. -}
PURPOSE RELATION contains IN ENGLISH LATEX {+ The declarations of relations and definitions of rules are placed in subcontainers of a context, called patterns. For the purpose of reuse, a pattern might be included in multiple contexts. However in practice, a pattern cannot be included by reference. There is no objection against a pattern without any context or a context without any pattern. -}
PURPOSE RELATION declares[Context * Concept] IN ENGLISH LATEX {+ A term needs to be declared to exist in a closed world. A term is declared in a context when mentioned anywhere in that context. A term is a concept or an instance of a concept. Thus, a concept needs to declared in a context to exist in that context. -}

PURPOSE PATTERN "Pattern" IN ENGLISH LATEX {+ A pattern serves as a container for the declaration of relations and definitions of rules including their attributes. In practice, a pattern is mainly used as an intuitive container to divide a context syntactically. Ideas exist to let a pattern be a self-contained context, which can be included within a larger context. The exact purpose of a pattern is still under investigation.  -}
PURPOSE RELATION name[Pattern * PatternName] IN ENGLISH LATEX {+ A pattern requires a human-friendly name to identify that pattern within a context. -}
PURPOSE RELATION defines[Pattern * Rule] IN ENGLISH LATEX {+ A pattern is designed to contain definitions of rules. -}
PURPOSE RELATION defines[Pattern * GeneralizationRule] IN ENGLISH LATEX {+ A pattern is designed to contain definitions of generalization rules. -}
PURPOSE RELATION declares[Pattern * Relation] IN ENGLISH LATEX {+ A pattern is designed to contain declarations of relations. -}
PURPOSE RELATION purpose[Pattern * Purpose] IN ENGLISH LATEX {+ A student may have reasons to define a pattern. Documenting those purposes serves traceability of the design process and understanding of that pattern. -}

PURPOSE PATTERN "Gen" IN ENGLISH LATEX {+ Special rule statements exist to define the is-a-relation between concepts in a rule specification. Each such statement defines a generalization rule posing that a concept is more specific than a more generic concept. Thus, each generalization rule implies an is-a-relationship between two concepts. The is-a-relation is reflexive, transitive and antisymmetric. The student may define a minimal set of generalization rules. The reflexive transitive closure of the set of generalization rules in a context is the is-a-relation in that context. -}
PURPOSE RULE "eq gen" IN ENGLISH LATEX {+ Duplicate definitions of generalization rules are redundant. A rule, expressing when two generalization rules are identical, prevents duplicates. -}
PURPOSE RELATION generic IN ENGLISH LATEX {+ A generalization rule requires a more generic concept to be meaningful. -}
PURPOSE RELATION specific IN ENGLISH LATEX {+ A generalization rule requires a more specific concept to be meaningful. -}

PURPOSE PATTERN "Concept" IN ENGLISH LATEX {+ Abstract terms, called concepts, exist to define heterogeneous relations between them. Ampersand is designed on a heterogeneous relation algebra instead of a homogeneous one, because ... Concepts - and the relations between them - need to be understood as elements of their class [JAAP]. Concepts are of the same class when they are related over is-a-relationships. A concept represents a set of atomic terms, called atoms. An atom is said to exist as a concept, only if that atom is an instance of that concept or a more specific concept [interpretation function, JAAP?]. Thus, concepts represent the existence and non-existence of things in the modelled world. -}
PURPOSE RULE "order" IN ENGLISH LATEX {+ An is-a-class is designed to be a set of concepts, where every two concepts are is-a-related in a way. -}
PURPOSE RULE "referential integrity" IN ENGLISH LATEX {+ The interpretation of heterogeneous relations requires that every atom, used in instances of those relations, exists [GERARD, interpretation function]. -}
PURPOSE RULE "entity integrity concept" IN ENGLISH LATEX {+ The human-friendly value of an atom must be chosen such that it does not conflict with other values of atoms within an is-a-class i.e. atoms must have a unique value within a class. -}
PURPOSE RELATION name[Concept * ConceptName] IN ENGLISH LATEX {+ A concept requires a human-friendly name to identify that concept within a context. -}
PURPOSE RELATION elem[Concept * Atom] IN ENGLISH LATEX {+ A concept represents a set of atoms, where each atom is said to be that concept. This instance-of-relation between concepts and atoms enables the definition of relationships between atoms as instances of heterogeneous relations on concepts. -}
PURPOSE RELATION def[Concept * Meaning] IN ENGLISH LATEX {+ The meaning of a concept can be defined. The meaning is required for a human to determine whether an atom should be an instance of a concept or not. The meaning of an atom should be known by that human. Note that the computer can only determine the interpretation of a rule specification, not its meaning in the modelled world. -}
PURPOSE RELATION purpose[Concept * Purpose] IN ENGLISH LATEX {+ The reason why a concept exists can be documented for the sake of traceability and understanding of a rule specification. -}
PURPOSE RELATION name[IsAClass * ClassName] IN ENGLISH LATEX {+ A class of concepts requires a human-friendly name to identify that class within a context. -}
PURPOSE RELATION belongs_to IN ENGLISH LATEX {+ A concept needs to be understood as an element of the class to which it belongs. For example, both weathermen and newsreaders are persons. Weatherman, newsreader and person are concepts that belong to the class of people. Atom Katrina is a weathergirl as well as a newsreader, these atoms are of the same class and must be identical. Atom Katrina is also a hurricane, which is a different class and therefore a different atom. -}
PURPOSE RELATION value[Atom * AtomValue] IN ENGLISH LATEX {+ An atom requires a human-friendly value to refer to that atom. -}

PURPOSE PATTERN "Sign" IN ENGLISH LATEX {+ The source and target of relation expressions and relationships are required for their interpretation [GERARD, interpretation function]. -}
PURPOSE RELATION src[Sign * Concept] IN ENGLISH LATEX {+ The sign of a relation requires a source concept to be meaningful. -}
PURPOSE RELATION trg[Sign * Concept] IN ENGLISH LATEX {+ The sign of a relation requires a target concept to be meaningful. -}
PURPOSE RELATION src[Relationship * Atom] IN ENGLISH LATEX {+ A relationship requires a source atom to be meaningful. -}
PURPOSE RELATION trg[Relationship * Atom] IN ENGLISH LATEX {+ A relationship requires a target atom to be meaningful. -}

PURPOSE PATTERN "Declaration" IN ENGLISH LATEX {+ A student defines a language by declaring relations. From a language perspective, these user-declared relations are tokens - syntactic symbols - of the language. A user-declared relation can be given a pragma and a meaning, which shows how the relation and its relationships relate to natural language. Only the user-declared relations have a user-defined population. From this population perspective, the user-declared relations are containers to administer facts from the modelled world as relationships. -}
PURPOSE RULE "eq declaration" IN ENGLISH LATEX {+ A relation can be identified within a context by its human-friendly name, its source and its target. -}
PURPOSE RULE "property enum" IN ENGLISH LATEX {+ Only a predefined set of properties of a relation can be defined within the declaration of that relation. -}
PURPOSE RULE "entity integrity of relation" IN ENGLISH LATEX {+ A relationship can be identified by its source, its target, and the relation of which it is an instance. This means that two relationships in a relation cannot have the same source, and same target. -}
PURPOSE RULE "typed domain" IN ENGLISH LATEX {+ To be meaningful, the source of a relationship in a relation must be of the same class as the source of that relation. -}
PURPOSE RULE "typed codomain" IN ENGLISH LATEX {+ To be meaningful, the target of a relationship in a relation must be of the same class as the target of that relation.-}
PURPOSE RELATION name[Relation * RelationName] IN ENGLISH LATEX {+ A relation requires a human-friendly name to refer to that relation. -}
PURPOSE RELATION sign[Relation * Sign] IN ENGLISH LATEX {+ A relation requires a sign to be meaningful. -}
PURPOSE RELATION declares[Relation * Property] IN ENGLISH LATEX {+ Properties of a relation can be defined as part of the declaration of that relation. A property of a relation is a rule (see \ref{DefDecl:PropertyPropertyRule}). -}
PURPOSE RELATION through IN ENGLISH LATEX {+ A rule is called a property only when it is defined as part of the declaration of a relation. Thus, a rule with the same interpretation as a property of a relation is not necessarily a property. Properties may be defined by a user or derived by the Ampersand compiler. -}
PURPOSE RELATION pragma_prefix IN ENGLISH LATEX {+ A relation may be declared with a pragma to illustrate the meaning of that relation by example. A pragma is a template of a sentence on a relationship: pragma_prefix src pragma_infix trg pragma_suffix. -}
PURPOSE RELATION pragma_infix IN ENGLISH LATEX {+ A relation may be declared with a pragma to illustrate the meaning of that relation by example. A pragma is a template of a sentence on a relationship: pragma_prefix src pragma_infix trg pragma_suffix. -}
PURPOSE RELATION pragma_suffix IN ENGLISH LATEX {+ A relation may be declared with a pragma to illustrate the meaning of that relation by example. A pragma is a template of a sentence on a relationship: pragma_prefix src pragma_infix trg pragma_suffix. -}
PURPOSE RELATION def[Relation * Meaning] IN ENGLISH LATEX {+ The meaning of a relation can be declared. The meaning is required for a human to determine whether a relationship should be an instance of a relation or not. Note that the computer can only determine the interpretation of a rule specification, not its meaning in the modelled world. -}
PURPOSE RELATION purpose[Relation * Purpose] IN ENGLISH LATEX {+ The reason why a relation exists can be documented for the sake of traceability and understanding of a rule specification. -}
PURPOSE RELATION elem[Relation * Relationship] IN ENGLISH LATEX {+ A relation represents a set of relationships. Each relationship of a relation is said to be true for that relation, and all other relationships are not.  -}

PURPOSE PATTERN "Expression" IN ENGLISH LATEX {+ In essence, a rule specification is expressed in a relation algebra on user-declared relation terms. -}
PURPOSE RULE "rel name is decl name" IN ENGLISH LATEX {+ The name of a relation is used as a token representing a relation in an expression. -}
PURPOSE RELATION value[Expression * ASCIIString] IN ENGLISH LATEX {+ An expression requires an ASCII representation for interaction with humans. -}
PURPOSE RELATION uses IN ENGLISH LATEX {+ By design, an expression consists of relation tokens combined with relation algebraic operators and tokens for the identity and universal relations. -}
PURPOSE RELATION token IN ENGLISH LATEX {+ From a language perspective, the name of a relation is used as a token in an expression to refer to that relation. -}
PURPOSE RELATION sign[RelationToken * Sign] IN ENGLISH LATEX {+ A sign directive may be put on a relation token for two reasons. The first reason is to disambiguate an expression, while a relation token may not always identify a relation within a context. The second reason is to cast a relation to a more specific or more generic source or target than declared. -}
PURPOSE RELATION ref IN ENGLISH LATEX {+ Every relation token in an expression must refer to a relation. -}

PURPOSE PATTERN "Rule" IN ENGLISH LATEX {+ A rule in a context must hold i.e. be true. Thus, a rule is a constraint on a context. By design, a rule is an relation algebraic expression - a relation with a sign -, which is true when it is an equivalent of the equally signed universal relation. -}
PURPOSE RELATION name[Rule * RuleName] IN ENGLISH LATEX {+ A rule requires a human-friendly name to refer to that rule. -}
PURPOSE RELATION as IN ENGLISH LATEX {+ By design, a rule is formally expressed in relation algebra. -}
PURPOSE RELATION def[Rule * Meaning] IN ENGLISH LATEX {+ A rule is an expression on: relations with a single interpretation and single meaning in natural language; and relational operators with a single interpretation. Therefore a rule has a single meaning, which may be articulated in natural language. By documenting the meaning of the rule in natural language: the student can verify the correctness of the translation from the formal rule; and stakeholders can agree upon the rule. This way the trace is documented from a rule agreed upon by stakeholders to the formal rule. -}
PURPOSE RELATION purpose[Rule * Purpose] IN ENGLISH LATEX {+ There is a reason why stakeholders agree upon a rule. There may be documents, discussions or other grounds. Documenting the reason why a rule exists and the process to get to that reason serves traceability and maintenance of a rule. -}
ENDCONTEXT
